sourceSets {
	main.java.srcDirs = [ "src/" ]
	main.resources.srcDirs = ["../core/assets"]
	test.java.srcDirs = []
}

archivesBaseName = appName

ext {
	runDir = "${rootDir}/desktop"
	mainClassName = "hitonoriol.madsand.desktop.Launcher"
}

import com.badlogic.gdx.tools.texturepacker.TexturePacker
import static groovy.io.FileType.DIRECTORIES
task texturePacker {
	doLast {
		TexturePacker.process("${rootDir}/core/textures", "${assetsDir}/textures", "textures")
	}
}

task run(type: JavaExec, dependsOn: [classes, texturePacker]) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.runDir
	ignoreExitValue = true
}

task debug(type: JavaExec, dependsOn: classes) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.runDir
	ignoreExitValue = true
	debug = true
}

task dist(type: Jar, dependsOn: texturePacker) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes 	'Main-Class': project.mainClassName,
					'Implementation-Title': appName,
					'Implementation-Version': version
	}
	dependsOn configurations.runtimeClasspath
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	with jar
}

dist.dependsOn classes

apply from: "${rootDir}/jpackage.gradle"

eclipse.project.name = appName + "-desktop"
