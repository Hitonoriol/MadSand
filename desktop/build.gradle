sourceSets.main.java.srcDirs = [ "src/" ]
sourceSets.main.resources.srcDirs = ["../core/assets"]
sourceSets.test.java.srcDirs = []

project.ext.mainClassName = "hitonoriol.madsand.desktop.Launcher"
project.ext.rootDir = file(".")
project.ext.assetsDir = new File("../core/assets")
archivesBaseName = appName

compileJava {
	options.release = 8
}

task run(dependsOn: classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.assetsDir
	ignoreExitValue = true
}

import com.badlogic.gdx.tools.texturepacker.TexturePacker
import static groovy.io.FileType.DIRECTORIES
task texturePacker {
	doLast {
		def root = project.rootDir.absolutePath + "/core"
		def dirs = [];
		new File(root + "/textures").traverse(type: DIRECTORIES, maxDepth: 0) {
			TexturePacker.process(it.absolutePath, root + "/assets/textures", it.name)
		};
	}
}

task debug(dependsOn: classes, type: JavaExec) {
	main = project.mainClassName
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
	workingDir = project.assetsDir
	ignoreExitValue = true
	debug = true
}

task dist(type: Jar) {
	manifest {
		attributes 	'Main-Class': project.mainClassName,
					'Implementation-Title': appName,
					'Implementation-Version': version
	}
	dependsOn configurations.runtimeClasspath
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	with jar
}


dist.dependsOn classes

eclipse.project.name = appName + "-desktop"
