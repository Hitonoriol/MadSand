plugins {
	id 'java'
	id 'application'
	id 'org.openjfx.javafxplugin' version '0.0.10'
}

application {
    mainClassName = "hitonoriol.madsand.launcher.LauncherApp"
}

sourceSets {
	main.java.srcDirs = [ "src/" ]
	main.resources.srcDirs = [ "assets/" ]
}

javafx {
    version = "18.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.web' ]
}

dependencies {
	implementation 'com.google.code.gson:gson:2.8.6'
	implementation 'org.hildan.fxgson:fx-gson:4.0.1'
	implementation 'com.github.rjeschke:txtmark:0.13'
	implementation 'org.kohsuke:github-api:1.308'
	implementation 'com.vdurmont:semver4j:3.1.0'
	runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:win"
	runtimeOnly "org.openjfx:javafx-graphics:$javafx.version:linux"
}

archivesBaseName = 'MadSandLauncher'

ext {
	appName = 'MadSandLauncher'
	versionCode = '2.0'
	mainClassName = application.mainClassName
}

version = versionCode

task dist(type: Jar) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes 	'Main-Class': mainClassName,
					'Implementation-Title': archivesBaseName,
					'Implementation-Version': version
	}
	dependsOn configurations.runtimeClasspath
	from {
		configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
	}
	with jar
}

ext {
	jlinkModuleDir += "${pathSep}${sourceSets.main.runtimeClasspath.asPath}"
	jlinkModuleList += ",java.sql,javafx.controls,javafx.fxml,javafx.web"
}
apply from: "${rootDir}/jpackage.gradle"

eclipse.project.name = rootProject.appName + "-launcher"